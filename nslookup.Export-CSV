"TypeName","Name","MemberType","Definition"
"System.String","Clone","Method","System.Object Clone(), System.Object ICloneable.Clone()"
"System.String","CompareTo","Method","int CompareTo(System.Object value), int CompareTo(string strB), int IComparable.CompareTo(System.Object obj), int IComparable[string].CompareTo(string other)"
"System.String","Contains","Method","bool Contains(string value), bool Contains(string value, System.StringComparison comparisonType), bool Contains(char value), bool Contains(char value, System.StringComparison comparisonType)"
"System.String","CopyTo","Method","void CopyTo(int sourceIndex, char[] destination, int destinationIndex, int count), void CopyTo(System.Span[char] destination)"
"System.String","EndsWith","Method","bool EndsWith(string value), bool EndsWith(string value, System.StringComparison comparisonType), bool EndsWith(string value, bool ignoreCase, cultureinfo culture), bool EndsWith(char value)"
"System.String","EnumerateRunes","Method","System.Text.StringRuneEnumerator EnumerateRunes()"
"System.String","Equals","Method","bool Equals(System.Object obj), bool Equals(string value), bool Equals(string value, System.StringComparison comparisonType), bool IEquatable[string].Equals(string other)"
"System.String","GetEnumerator","Method","System.CharEnumerator GetEnumerator(), System.Collections.IEnumerator IEnumerable.GetEnumerator(), System.Collections.Generic.IEnumerator[char] IEnumerable[char].GetEnumerator()"
"System.String","GetHashCode","Method","int GetHashCode(), int GetHashCode(System.StringComparison comparisonType)"
"System.String","GetPinnableReference","Method","System.Char&, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e GetPinnableReference()"
"System.String","GetType","Method","type GetType()"
"System.String","GetTypeCode","Method","System.TypeCode GetTypeCode(), System.TypeCode IConvertible.GetTypeCode()"
"System.String","IndexOf","Method","int IndexOf(char value), int IndexOf(char value, int startIndex), int IndexOf(char value, System.StringComparison comparisonType), int IndexOf(char value, int startIndex, int count), int IndexOf(string value), int IndexOf(string value, int startIndex), int IndexOf(string value, int startIndex, int count), int IndexOf(string value, System.StringComparison comparisonType), int IndexOf(string value, int startIndex, System.StringComparison comparisonType), int IndexOf(string value, int startIndex, int count, System.StringComparison comparisonType)"
"System.String","IndexOfAny","Method","int IndexOfAny(char[] anyOf), int IndexOfAny(char[] anyOf, int startIndex), int IndexOfAny(char[] anyOf, int startIndex, int count)"
"System.String","Insert","Method","string Insert(int startIndex, string value)"
"System.String","IsNormalized","Method","bool IsNormalized(), bool IsNormalized(System.Text.NormalizationForm normalizationForm)"
"System.String","LastIndexOf","Method","int LastIndexOf(string value, int startIndex), int LastIndexOf(string value, int startIndex, int count), int LastIndexOf(string value, System.StringComparison comparisonType), int LastIndexOf(string value, int startIndex, System.StringComparison comparisonType), int LastIndexOf(string value, int startIndex, int count, System.StringComparison comparisonType), int LastIndexOf(char value), int LastIndexOf(char value, int startIndex), int LastIndexOf(char value, int startIndex, int count), int LastIndexOf(string value)"
"System.String","LastIndexOfAny","Method","int LastIndexOfAny(char[] anyOf), int LastIndexOfAny(char[] anyOf, int startIndex), int LastIndexOfAny(char[] anyOf, int startIndex, int count)"
"System.String","Normalize","Method","string Normalize(), string Normalize(System.Text.NormalizationForm normalizationForm)"
"System.String","PadLeft","Method","string PadLeft(int totalWidth), string PadLeft(int totalWidth, char paddingChar)"
"System.String","PadRight","Method","string PadRight(int totalWidth), string PadRight(int totalWidth, char paddingChar)"
"System.String","Remove","Method","string Remove(int startIndex, int count), string Remove(int startIndex)"
"System.String","Replace","Method","string Replace(string oldValue, string newValue, bool ignoreCase, cultureinfo culture), string Replace(string oldValue, string newValue, System.StringComparison comparisonType), string Replace(char oldChar, char newChar), string Replace(string oldValue, string newValue)"
"System.String","ReplaceLineEndings","Method","string ReplaceLineEndings(), string ReplaceLineEndings(string replacementText)"
"System.String","Split","Method","string[] Split(char separator, System.StringSplitOptions options), string[] Split(char separator, int count, System.StringSplitOptions options), string[] Split(Params char[] separator), string[] Split(char[] separator, int count), string[] Split(char[] separator, System.StringSplitOptions options), string[] Split(char[] separator, int count, System.StringSplitOptions options), string[] Split(string separator, System.StringSplitOptions options), string[] Split(string separator, int count, System.StringSplitOptions options), string[] Split(string[] separator, System.StringSplitOptions options), string[] Split(string[] separator, int count, System.StringSplitOptions options)"
"System.String","StartsWith","Method","bool StartsWith(string value), bool StartsWith(string value, System.StringComparison comparisonType), bool StartsWith(string value, bool ignoreCase, cultureinfo culture), bool StartsWith(char value)"
"System.String","Substring","Method","string Substring(int startIndex), string Substring(int startIndex, int length)"
"System.String","ToBoolean","Method","bool IConvertible.ToBoolean(System.IFormatProvider provider)"
"System.String","ToByte","Method","byte IConvertible.ToByte(System.IFormatProvider provider)"
"System.String","ToChar","Method","char IConvertible.ToChar(System.IFormatProvider provider)"
"System.String","ToCharArray","Method","char[] ToCharArray(), char[] ToCharArray(int startIndex, int length)"
"System.String","ToDateTime","Method","datetime IConvertible.ToDateTime(System.IFormatProvider provider)"
"System.String","ToDecimal","Method","decimal IConvertible.ToDecimal(System.IFormatProvider provider)"
"System.String","ToDouble","Method","double IConvertible.ToDouble(System.IFormatProvider provider)"
"System.String","ToInt16","Method","short IConvertible.ToInt16(System.IFormatProvider provider)"
"System.String","ToInt32","Method","int IConvertible.ToInt32(System.IFormatProvider provider)"
"System.String","ToInt64","Method","long IConvertible.ToInt64(System.IFormatProvider provider)"
"System.String","ToLower","Method","string ToLower(), string ToLower(cultureinfo culture)"
"System.String","ToLowerInvariant","Method","string ToLowerInvariant()"
"System.String","ToSByte","Method","sbyte IConvertible.ToSByte(System.IFormatProvider provider)"
"System.String","ToSingle","Method","float IConvertible.ToSingle(System.IFormatProvider provider)"
"System.String","ToString","Method","string ToString(), string ToString(System.IFormatProvider provider), string IConvertible.ToString(System.IFormatProvider provider)"
"System.String","ToType","Method","System.Object IConvertible.ToType(type conversionType, System.IFormatProvider provider)"
"System.String","ToUInt16","Method","ushort IConvertible.ToUInt16(System.IFormatProvider provider)"
"System.String","ToUInt32","Method","uint IConvertible.ToUInt32(System.IFormatProvider provider)"
"System.String","ToUInt64","Method","ulong IConvertible.ToUInt64(System.IFormatProvider provider)"
"System.String","ToUpper","Method","string ToUpper(), string ToUpper(cultureinfo culture)"
"System.String","ToUpperInvariant","Method","string ToUpperInvariant()"
"System.String","Trim","Method","string Trim(), string Trim(char trimChar), string Trim(Params char[] trimChars)"
"System.String","TrimEnd","Method","string TrimEnd(), string TrimEnd(char trimChar), string TrimEnd(Params char[] trimChars)"
"System.String","TrimStart","Method","string TrimStart(), string TrimStart(char trimChar), string TrimStart(Params char[] trimChars)"
"System.String","TryCopyTo","Method","bool TryCopyTo(System.Span[char] destination)"
"System.String","Chars","ParameterizedProperty","char Chars(int index) {get;}"
"System.String","Length","Property","int Length {get;}"
